一、什么是系统调用
    应用程序通过系统调用请求操作系统的服务。系统中的各个共享资源都由操作系统统一掌管，因此在用户程序中，凡是与资源有关的操作
    （如存储分配，io操作，文件管理等），都必须通过系统调用的方式向操作系统提出服务请求，由操作系统代为完成。这样可以保证系统
    的稳定性和安全性，防止用户进行非法操作。
    1.设备管理：完成设备的请求，释放，启动等功能。
    2.文件管理：完成文件的读写，创建，删除等功能。
    3.进程控制：完成进程的创建，撤销，阻塞，唤醒等功能
    4.进程通信：完成进程间的消息传递信号，传递等功能
    5.内存管理：完成内存的分配和回收等功能
二、系统调用和库函数的区别
    系统调用是操作系统向上层提供的接口
    有的库函数是对系统调用的进一步封装
    当今编写的应用程序大多数是通过高级语音提供的库函数，间接地进行系统调用
三、系统调用背后的过程
    传递系统调用参数->执行陷入指令（用户态）->执行系统调用相应服务程序（核心态）->返回用户程序
    1.陷入指令是在用户态执行的，执行陷入指令后立即引发一个内中断，从而CPU进入核心态
    2.发出系统调用请求是在用户态，而对系统调用的相应处理在核心态下进行
    3.陷入指令是唯一一个只能在用户态下执行，而不可在核心态执行的指令
