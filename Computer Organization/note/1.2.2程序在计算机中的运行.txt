一、程序在计算机中的运行流程
    1.程序加载：程序代码和数据被加载到计算机的内存中，通常是从硬盘或其他存储设备中读取。
    2.指令译码：CPU 从内存中读取程序代码并将其转换为机器指令。每个指令包含操作码和操作数，操作码指示 CPU 执行的操作类型，操作数指示要操作的数据。
    3.执行指令：CPU 根据指令中的操作码执行相应的操作，例如加法、减法、逻辑运算等。CPU 还可以从内存中读取数据、写入数据、跳转到其他指令等。
    4.访存：CPU 可以访问内存中的数据和指令，读取或写入这些数据。
    5.控制流程：程序中的条件语句和循环语句可以改变程序执行的顺序和流程，CPU 可以根据这些语句来决定执行哪些指令或跳转到哪个地址。
    6.异常处理：如果发生错误或异常情况，例如除以零或访问非法内存地址等，CPU 会触发异常处理机制，将控制权转移到操作系统内核态，并执行相应的异常处理程序。
    7.中断处理：如果有外部事件发生，例如输入输出操作完成、时钟中断等，CPU 会响应中断信号，并将控制权转移到相应的中断处理程序。
二、某条指令在主机中的执行过程
    取指令：
    1.读取PC（程序计数器）中的指令地址，送到存储器的MAR。
    2.存储器读取MAR中的指令地址，将对应地址上的数据送入MDR。
    3.MDR上的数据，送到IR（指令寄存器中）。
    分析指令：
    4.IR中的指令被CU读取，解析为操作码和地址码。CU根据操作码执行相应指令。
    执行指令
    5.将地址码从IR送回存储器的MAR中。
    6.存储器读取MAR中的地址，将对应地址上的数据送入MDR。
    7.运算器读取MDR中数据，进行运算
    8.运算器得出结果通过总线输出
    